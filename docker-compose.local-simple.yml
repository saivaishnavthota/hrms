version: "3.9"

services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: fastapi_app
    ports:
      - "8000:8000"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - db
    environment:
      PORT: 8000
      DATABASE_URL: postgresql://admin:nxzen%40123@db:5432/Nxzen
      # Microsoft Entra ID Configuration
      ENTRA_CLIENT_ID: ${ENTRA_CLIENT_ID:-}
      ENTRA_CLIENT_SECRET: ${ENTRA_CLIENT_SECRET:-}
      ENTRA_TENANT_ID: ${ENTRA_TENANT_ID:-}
      ENTRA_REDIRECT_URI: ${ENTRA_REDIRECT_URI:-}
      # CORS Configuration for local development
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173,http://localhost:80
      # Azure Storage Configuration
      AZURE_CONNECTION_STRING: DefaultEndpointsProtocol=https;AccountName=hrmsnxzen;AccountKey=Jug56pLmeZIJplobcV+f20v7IXnh6PWuih0hxRYpvRXpGh6tnJrzALqtqL/hRR3lpZK0ZTKIs2Pv+AStDvBH4w==;EndpointSuffix=core.windows.net
      AZURE_CONTAINER_NAME: con-hrms
    networks:
      - app-network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
      args:
        # Pass environment variables as build arguments for Vite - CHANGED TO HTTP
        VITE_API_URL: http://localhost:8000
        VITE_API_BASE_URL: http://localhost:8000
        VITE_ENTRA_ENABLED: true
    container_name: react_app
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_ENTRA_ENABLED=true
    networks:
      - app-network

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: nxzen@123
      POSTGRES_DB: Nxzen
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass nxzen123 --appendonly yes
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
